
library (inverter) {
	delay_model : polynomial;
	default_fanout_load : 1.0;
	default_inout_pin_cap : 1.0;
	default_input_pin_cap : 1.0;
	default_output_pin_cap : 0.0;
	time_unit : 1ns;
	capacitive_load_unit (1.0, pf);
	voltage_unit : 1V;
	current_unit : 1mA;
	pulling_resistance_unit : 1kohm;
	slew_upper_threshold_pct_rise : 80.0;
	slew_lower_threshold_pct_rise : 20.0;
	slew_derate_from_library : 1.0;
	slew_lower_threshold_pct_fall : 20.0;
	slew_upper_threshold_pct_fall : 80.0;
	input_threshold_pct_fall : 50.0;
	input_threshold_pct_rise : 50.0;
	output_threshold_pct_rise : 50.0;
	output_threshold_pct_fall : 50.0;
	poly_template (my_noise_reject) {  /* user defined attribute */
		domain (typ) {  /* user defined attribute */
			mapping (voltage, VDD1); /* user defined attribute */
			mapping (voltage1, VDD2); /* user defined attribute */
			variable_1_range (0, 2); /* user defined attribute */
			variable_2_range (1.5, 1.7); /* user defined attribute */
			variable_3_range (1.2, 1.4); /* user defined attribute */
			variable_4_range (25, 25); /* user defined attribute */
			variable_5_range (0.01, 1.0); /* user defined attribute */
			variables (input_noise_width, voltage, voltage1, temperature, total_output_net_capacitance); /* user defined attribute */
		}
		domain (min) {  /* user defined attribute */
			mapping (voltage, VDD1); /* user defined attribute */
			mapping (voltage1, VDD2); /* user defined attribute */
			variable_1_range (0, 2); /* user defined attribute */
			variable_2_range (1.7, 1.8); /* user defined attribute */
			variable_3_range (1.4, 1.5); /* user defined attribute */
			variable_4_range (-40, -40); /* user defined attribute */
			variables (input_noise_width, voltage, voltage1, temperature); /* user defined attribute */
		}
		domain (max) {  /* user defined attribute */
			mapping (voltage, VDD1); /* user defined attribute */
			mapping (voltage1, VDD2); /* user defined attribute */
			variable_1_range (0, 2); /* user defined attribute */
			variable_2_range (1.6, 1.7); /* user defined attribute */
			variable_3_range (1.1, 1.2); /* user defined attribute */
			variable_4_range (125, 125); /* user defined attribute */
			variables (input_noise_width, voltage, voltage1, temperature); /* user defined attribute */
		}
		mapping (voltage, VDD1); /* user defined attribute */
		mapping (voltage1, VDD2); /* user defined attribute */
		variable_1_range (0, 2); /* user defined attribute */
		variable_2_range (1.4, 1.8); /* user defined attribute */
		variable_3_range (1.1, 1.5); /* user defined attribute */
		variable_4_range (-40, 125); /* user defined attribute */
		variable_5_range (0.01, 1.0); /* user defined attribute */
		variables (input_noise_width, voltage, voltage1, temperature, total_output_net_capacitance); /* user defined attribute */
	}
	poly_template (my_noise_reject_outside_rail) {  /* user defined attribute */
		mapping (voltage, VDD1); /* user defined attribute */
		mapping (voltage1, VDD2); /* user defined attribute */
		variable_1_range (0, 2); /* user defined attribute */
		variable_2_range (1.4, 1.8); /* user defined attribute */
		variable_3_range (1.1, 1.5); /* user defined attribute */
		variable_4_range (-40, 125); /* user defined attribute */
		variables (input_noise_width, voltage, voltage1, temperature); /* user defined attribute */
	}
	poly_template (my_current_low) {  /* user defined attribute */
		mapping (voltage, VDD1); /* user defined attribute */
		mapping (voltage1, VDD2); /* user defined attribute */
		variable_1_range (-1, 2); /* user defined attribute */
		variable_2_range (1.4, 1.8); /* user defined attribute */
		variable_3_range (1.1, 1.5); /* user defined attribute */
		variable_4_range (-40, 125); /* user defined attribute */
		variables (iv_output_voltage, voltage, voltage1, temperature); /* user defined attribute */
	}
	poly_template (my_current_high) {  /* user defined attribute */
		mapping (voltage, VDD1); /* user defined attribute */
		mapping (voltage1, VDD2); /* user defined attribute */
		variable_1_range (-1, 2); /* user defined attribute */
		variable_2_range (1.4, 1.8); /* user defined attribute */
		variable_3_range (1.1, 1.5); /* user defined attribute */
		variable_4_range (-40, 125); /* user defined attribute */
		variables (iv_output_voltage, voltage, voltage1, temperature); /* user defined attribute */
	}
	poly_template (my_propagated_noise) {  /* user defined attribute */
		mapping (voltage, VDD1); /* user defined attribute */
		mapping (voltage1, VDD2); /* user defined attribute */
		variable_1_range (0.01, 2); /* user defined attribute */
		variable_2_range (0, 0.8); /* user defined attribute */
		variable_3_range (0.0, 1.0); /* user defined attribute */
		variable_4_range (0, 2); /* user defined attribute */
		variable_5_range (1.4, 1.8); /* user defined attribute */
		variable_6_range (1.1, 1.5); /* user defined attribute */
		variable_7_range (-40, 125); /* user defined attribute */
		variables (input_noise_width, input_noise_height, input_peak_time_ratio, total_output_net_capacitance, voltage, voltage1, temperature); /* user defined attribute */
	}
	power_supply () {  /* user defined attribute */
		default_power_rail : VDD; /* user defined attribute */
		power_rail (VDD1, 1.6); /* user defined attribute */
		power_rail (VDD2, 1.3); /* user defined attribute */
	}
	input_voltage (MY_CMOS_IN) {
		vil : 0.3;
		vih : 1.1;
		vimin : -0.3;
		vimax : VDD + 0.3;
	}
	output_voltage (MY_CMOS_OUT) {
		vol : 0.1;
		voh : 1.4;
		vomin : -0.3;
		vomax : VDD + 0.3;
	}
	cell (INV) {
		area : 1.0;
		pin (A) {
			capacitance : 1.0;
			direction : input;
			fanout_load : 1.0;
			input_voltage : MY_CMOS_IN;
			hyperbolic_noise_above_high () {  /* user defined attribute */
				area_coefficient : 0.3; /* user defined attribute */
				height_coefficient : 0.1; /* user defined attribute */
				width_coefficient : 0.01; /* user defined attribute */
			}
			hyperbolic_noise_below_low () {  /* user defined attribute */
				area_coefficient : 0.3; /* user defined attribute */
				height_coefficient : 0.1; /* user defined attribute */
				width_coefficient : 0.01; /* user defined attribute */
			}
			hyperbolic_noise_high () {  /* user defined attribute */
				area_coefficient : 0.9; /* user defined attribute */
				height_coefficient : 0.3; /* user defined attribute */
				width_coefficient : 0.1; /* user defined attribute */
			}
			hyperbolic_noise_low () {  /* user defined attribute */
				area_coefficient : 1.1; /* user defined attribute */
				height_coefficient : 0.4; /* user defined attribute */
				width_coefficient : 0.1; /* user defined attribute */
			}
		}
		pin (Y) {
			direction : output;
			function : "!A";
			max_fanout : 10.0;
			output_voltage : MY_CMOS_OUT;
			timing () {
				related_pin : A;
				propagated_noise_height_above_high (my_propagated_noise) {  /* user defined attribute */
					coefs ("1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0"); /* user defined attribute */
					orders ("1, 1, 1, 1, 1, 1, 1"); /* user defined attribute */
				}
				propagated_noise_height_below_low (my_propagated_noise) {  /* user defined attribute */
					coefs ("1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0"); /* user defined attribute */
					orders ("1, 1, 1, 1, 1, 1, 1"); /* user defined attribute */
				}
				propagated_noise_height_high (my_propagated_noise) {  /* user defined attribute */
					coefs ("1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0"); /* user defined attribute */
					orders ("1, 1, 1, 1, 1, 1, 1"); /* user defined attribute */
				}
				propagated_noise_height_low (my_propagated_noise) {  /* user defined attribute */
					coefs ("1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0"); /* user defined attribute */
					orders ("1, 1, 1, 1, 1, 1, 1"); /* user defined attribute */
				}
				propagated_noise_peak_time_ratio_above_high (my_propagated_noise) {  /* user defined attribute */
					coefs ("1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0"); /* user defined attribute */
					orders ("1, 1, 1, 1, 1, 1, 1"); /* user defined attribute */
				}
				propagated_noise_peak_time_ratio_below_low (my_propagated_noise) {  /* user defined attribute */
					coefs ("1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0"); /* user defined attribute */
					orders ("1, 1, 1, 1, 1, 1, 1"); /* user defined attribute */
				}
				propagated_noise_peak_time_ratio_high (my_propagated_noise) {  /* user defined attribute */
					coefs ("1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0"); /* user defined attribute */
					orders ("1, 1, 1, 1, 1, 1, 1"); /* user defined attribute */
				}
				propagated_noise_peak_time_ratio_low (my_propagated_noise) {  /* user defined attribute */
					coefs ("1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0"); /* user defined attribute */
					orders ("1, 1, 1, 1, 1, 1, 1"); /* user defined attribute */
				}
				propagated_noise_width_above_high (my_propagated_noise) {  /* user defined attribute */
					coefs ("1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0"); /* user defined attribute */
					orders ("1, 1, 1, 1, 1, 1, 1"); /* user defined attribute */
				}
				propagated_noise_width_below_low (my_propagated_noise) {  /* user defined attribute */
					coefs ("1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0"); /* user defined attribute */
					orders ("1, 1, 1, 1, 1, 1, 1"); /* user defined attribute */
				}
				propagated_noise_width_high (my_propagated_noise) {  /* user defined attribute */
					coefs ("1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0"); /* user defined attribute */
					orders ("1, 1, 1, 1, 1, 1, 1"); /* user defined attribute */
				}
				propagated_noise_width_low (my_propagated_noise) {  /* user defined attribute */
					coefs ("1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0"); /* user defined attribute */
					orders ("1, 1, 1, 1, 1, 1, 1"); /* user defined attribute */
				}
				steady_state_resistance_above_high : 200; /* user defined attribute */
				steady_state_resistance_below_low : 100; /* user defined attribute */
				steady_state_resistance_high : 1500; /* user defined attribute */
				steady_state_resistance_low : 1100; /* user defined attribute */
				cell_rise (scalar) {
					values ("0.0");
				}
				cell_fall (scalar) {
					values ("0.0");
				}
				rise_transition (scalar) {
					values ("0.0");
				}
				fall_transition (scalar) {
					values ("0.0");
				}
				noise_immunity_above_high (my_noise_reject_outside_rail) {
					coefs ("-0.0143963, 0.027248, 1.41943, -0.549705, \
    1.85208, 1.83018, -5.58407, -2.96409, -0.000201525, \
    0.000114903, -0.00251275, -0.00190513, 0.0025968, \
    0.00126903, -0.0109683, -0.00618697, 0.0342387, \
    0.0150761, 2.08784, -0.221496, 4.13848, 2.44241, \
    -14.0275, -7.83306, 7.09012e-05, -1.98323e-05, \
    -0.00194544, 0.000979011, 0.00657121, -0.000407383, \
    -0.0275888, -0.0163063"); /* user defined attribute */
					orders ("1 3 1 1"); /* user defined attribute */
				}
				noise_immunity_below_low (my_noise_reject_outside_rail) {
					coefs ("-0.0143963, 0.027248, 1.41943, -0.549705, \
    1.85208, 1.83018, -5.58407, -2.96409, -0.000201525, \
    0.000114903, -0.00251275, -0.00190513, 0.0025968, \
    0.00126903, -0.0109683, -0.00618697, 0.0342387, \
    0.0150761, 2.08784, -0.221496, 4.13848, 2.44241, \
    -14.0275, -7.83306, 7.09012e-05, -1.98323e-05, \
    -0.00194544, 0.000979011, 0.00657121, -0.000407383, \
    -0.0275888, -0.0163063"); /* user defined attribute */
					orders ("1 3 1 1"); /* user defined attribute */
				}
				noise_immunity_high (my_noise_reject) {
					domain (typ) {  /* user defined attribute */
						coefs ("1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,  \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0"); /* user defined attribute */
						orders ("1, 1, 1, 1, 1"); /* user defined attribute */
					}
					domain (min) {  /* user defined attribute */
						coefs ("-0.0143963, 0.027248, 1.41943, -0.549705, \
    1.85208, 1.83018, -5.58407, -2.96409, -0.000201525, \
    0.000114903, -0.00251275, -0.00190513, 0.0025968, \
    0.00126903, -0.0109683, -0.00618697, 0.0342387, \
    0.0150761, 2.08784, -0.221496, 4.13848, 2.44241, \
    -14.0275, -7.83306, 7.09012e-05, -1.98323e-05, \
    -0.00194544, 0.000979011, 0.00657121, -0.000407383, \
    -0.0275888, -0.0163063"); /* user defined attribute */
						orders ("1 3 1 1"); /* user defined attribute */
					}
					domain (max) {  /* user defined attribute */
						coefs ("-0.0143963, 0.027248, 1.41943, -0.549705, \
    1.85208, 1.83018, -5.58407, -2.96409, -0.000201525, \
    0.000114903, -0.00251275, -0.00190513, 0.0025968, \
    0.00126903, -0.0109683, -0.00618697, 0.0342387, \
    0.0150761, 2.08784, -0.221496, 4.13848, 2.44241, \
    -14.0275, -7.83306, 7.09012e-05, -1.98323e-05, \
    -0.00194544, 0.000979011, 0.00657121, -0.000407383, \
    -0.0275888, -0.0163063"); /* user defined attribute */
						orders ("1 3 1 1"); /* user defined attribute */
					}
				}
				noise_immunity_low (my_noise_reject) {
					domain (typ) {  /* user defined attribute */
						coefs ("1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,  \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0"); /* user defined attribute */
						orders ("1, 1, 1, 1, 1"); /* user defined attribute */
					}
					domain (min) {  /* user defined attribute */
						coefs ("-0.0143963, 0.027248, 1.41943, -0.549705, \
    1.85208, 1.83018, -5.58407, -2.96409, -0.000201525, \
    0.000114903, -0.00251275, -0.00190513, 0.0025968, \
    0.00126903, -0.0109683, -0.00618697, 0.0342387, \
    0.0150761, 2.08784, -0.221496, 4.13848, 2.44241, \
    -14.0275, -7.83306, 7.09012e-05, -1.98323e-05, \
    -0.00194544, 0.000979011, 0.00657121, -0.000407383, \
    -0.0275888, -0.0163063"); /* user defined attribute */
						orders ("1 3 1 1"); /* user defined attribute */
					}
					domain (max) {  /* user defined attribute */
						coefs ("-0.0143963, 0.027248, 1.41943, -0.549705, \
    1.85208, 1.83018, -5.58407, -2.96409, -0.000201525, \
    0.000114903, -0.00251275, -0.00190513, 0.0025968, \
    0.00126903, -0.0109683, -0.00618697, 0.0342387, \
    0.0150761, 2.08784, -0.221496, 4.13848, 2.44241, \
    -14.0275, -7.83306, 7.09012e-05, -1.98323e-05, \
    -0.00194544, 0.000979011, 0.00657121, -0.000407383, \
    -0.0275888, -0.0163063"); /* user defined attribute */
						orders ("1 3 1 1"); /* user defined attribute */
					}
				}
				steady_state_current_high (my_current_high) {
					coefs ("-0.0143963, 0.027248, 1.41943, -0.549705, \
    1.85208, 1.83018, -5.58407, -2.96409, -0.000201525, \
    0.000114903, -0.00251275, -0.00190513, 0.0025968, \
    0.00126903, -0.0109683, -0.00618697, 0.0342387, \
    0.0150761, 2.08784, -0.221496, 4.13848, 2.44241, \
    -14.0275, -7.83306, 7.09012e-05, -1.98323e-05, \
    -0.00194544, 0.000979011, 0.00657121, -0.000407383, \
    -0.0275888, -0.0163063"); /* user defined attribute */
					orders ("1 3 1 1"); /* user defined attribute */
				}
				steady_state_current_low (my_current_low) {
					coefs ("-0.0143963, 0.027248, 1.41943, -0.549705, \
    1.85208, 1.83018, -5.58407, -2.96409, -0.000201525, \
    0.000114903, -0.00251275, -0.00190513, 0.0025968, \
    0.00126903, -0.0109683, -0.00618697, 0.0342387, \
    0.0150761, 2.08784, -0.221496, 4.13848, 2.44241, \
    -14.0275, -7.83306, 7.09012e-05, -1.98323e-05, \
    -0.00194544, 0.000979011, 0.00657121, -0.000407383, \
    -0.0275888, -0.0163063"); /* user defined attribute */
					orders ("1 3 1 1"); /* user defined attribute */
				}
			}
		}
	}
}