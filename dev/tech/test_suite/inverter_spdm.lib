library (inverter) {

  delay_model : "polynomial";

  time_unit : "1ns"; 
  voltage_unit : "1V"; 
  current_unit : "1mA"; 
  capacitive_load_unit (1,pf);
  pulling_resistance_unit : 1kohm;

  default_fanout_load : 1.0;
  default_inout_pin_cap : 1.0;
  default_input_pin_cap : 1.0;
  default_output_pin_cap : 0.00;

  power_supply() { 
    default_power_rail : VDD; 
    power_rail(VDD1, 1.6); 
    power_rail(VDD2, 1.3); 
  }

  input_voltage(MY_CMOS_IN) { 
    vil : 0.3; 
    vih : 1.1; 
    vimin : -0.3; 
    vimax : VDD + 0.3; 
  }

  output_voltage(MY_CMOS_OUT) { 
    vol : 0.1; 
    voh : 1.4; 
    vomin : -0.3; 
    vomax : VDD + 0.3; 
  }

  poly_template ( my_noise_reject ) { 
  variables ( input_noise_width, voltage, voltage1, temperature, \
  total_output_net_capacitance); 
    mapping(voltage, VDD1); 
    mapping(voltage1, VDD2); 
    variable_1_range (0, 2);
    variable_2_range (1.4, 1.8); 
    variable_3_range (1.1, 1.5); 
    variable_4_range (-40, 125); 
    variable_5_range (0.01, 1.0); 

  domain (typ) { 
    variables ( input_noise_width, voltage, voltage1, \
    temperature,  \
    total_output_net_capacitance); 
    variable_1_range (0, 2);
    variable_2_range (1.5, 1.7);
    variable_3_range (1.2, 1.4);
    variable_4_range (25, 25);
    variable_5_range (0.01, 1.0);
    mapping(voltage, VDD1);
    mapping(voltage1, VDD2);
  }

  domain (min) {
    variables ( input_noise_width, \
    voltage, voltage1, \
    temperature );
    variable_1_range (0, 2);
    variable_2_range (1.7, 1.8);
    variable_3_range (1.4, 1.5);
    variable_4_range (-40, -40);
    mapping(voltage, VDD1);
    mapping(voltage1, VDD2);
  }

  domain (max) {
    variables ( input_noise_width, \
    voltage, voltage1, \
    temperature );
    variable_1_range (0, 2);
    variable_2_range (1.6, 1.7);
    variable_3_range (1.1, 1.2);variable_4_range (125, 125);
    mapping(voltage, VDD1);
    mapping(voltage1, VDD2);
    }
  }

  poly_template ( my_noise_reject_outside_rail ) {
    variables ( input_noise_width, \
    voltage, voltage1, \
    temperature );
    mapping(voltage, VDD1);
    mapping(voltage1, VDD2);
    variable_1_range (0, 2);
    variable_2_range (1.4, 1.8);
    variable_3_range (1.1, 1.5);
    variable_4_range (-40, 125);
  }

  poly_template ( my_current_low ) {
    variables ( iv_output_voltage, \
    voltage, voltage1, \
    temperature );
    mapping(voltage, VDD1);
    mapping(voltage1, VDD2);
    variable_1_range (-1, 2);
    variable_2_range (1.4, 1.8);
    variable_3_range (1.1, 1.5);
    variable_4_range (-40, 125);
  }

  poly_template ( my_current_high ) {
    variables ( iv_output_voltage, \
    voltage, voltage1, \
    temperature );
    mapping(voltage, VDD1);
    mapping(voltage1, VDD2);
    variable_1_range (-1, 2);
    variable_2_range (1.4, 1.8);
    variable_3_range (1.1, 1.5);
    variable_4_range (-40, 125);
  }

  poly_template(my_propagated_noise) {
    variables ( input_noise_width, \
    input_noise_height, \
    input_peak_time_ratio \
    total_output_net_capacitance, \
    voltage, \
    voltage1, \
    temperature );
    mapping(voltage, VDD1);
    mapping(voltage1, VDD2);
    variable_1_range (0.01, 2);
    variable_2_range (0, 0.8);
    variable_3_range (0.0, 1.0);
    variable_4_range (0, 2);
    variable_5_range (1.4, 1.8);
    variable_6_range (1.1, 1.5);
    variable_7_range (-40, 125);
  }

  cell ( INV ) {
    area : 1 ;

  pin ( A ) {
    direction : input ; 
    capacitance : 1 ; 
    fanout_load : 1 ; 

  input_voltage : MY_CMOS_IN ; 

  hyperbolic_noise_low() {
    height_coefficient : 0.4;
    area_coefficient : 1.1;
    width_coefficient : 0.1;
    }
  hyperbolic_noise_high() {
    height_coefficient : 0.3;
    area_coefficient : 0.9;
    width_coefficient : 0.1;
    }
  hyperbolic_noise_below_low() {
    height_coefficient : 0.1;
    area_coefficient : 0.3;
    width_coefficient : 0.01;
    }
  hyperbolic_noise_above_high() {
    height_coefficient : 0.1;
    area_coefficient : 0.3;
    width_coefficient : 0.01;
    }
  }

  pin ( Y ) {
    direction : output ; 
    max_fanout : 10 ; 
    function : " !A "; 

    output_voltage : MY_CMOS_OUT ; 

  timing () { 

    related_pin : A ; 

  cell_rise(scalar) { values("0");}
  rise_transition(scalar) { values("0");}
  cell_fall(scalar) { values("0");}
  fall_transition(scalar) { values("0");}

  noise_immunity_low (my_noise_reject) {
    domain (typ) {
    orders ("1, 1, 1, 1, 1")
    coefs ("1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,  \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0" );
    }
  domain (min) {
    orders("1 3 1 1");
    coefs("-0.0143963, 0.027248, 1.41943, -0.549705, \
    1.85208, 1.83018, -5.58407, -2.96409, -0.000201525, \
    0.000114903, -0.00251275, -0.00190513, 0.0025968, \
    0.00126903, -0.0109683, -0.00618697, 0.0342387, \
    0.0150761, 2.08784, -0.221496, 4.13848, 2.44241, \
    -14.0275, -7.83306, 7.09012e-05, -1.98323e-05, \
    -0.00194544, 0.000979011, 0.00657121, -0.000407383, \
    -0.0275888, -0.0163063");
    }
  domain (max) {
    orders("1 3 1 1");
    coefs("-0.0143963, 0.027248, 1.41943, -0.549705, \
    1.85208, 1.83018, -5.58407, -2.96409, -0.000201525, \
    0.000114903, -0.00251275, -0.00190513, 0.0025968, \
    0.00126903, -0.0109683, -0.00618697, 0.0342387, \
    0.0150761, 2.08784, -0.221496, 4.13848, 2.44241, \
    -14.0275, -7.83306, 7.09012e-05, -1.98323e-05, \
    -0.00194544, 0.000979011, 0.00657121, -0.000407383, \
    -0.0275888, -0.0163063");
    }
  }
  noise_immunity_high (my_noise_reject) {
  domain (typ) {
    orders ("1, 1, 1, 1, 1")
    coefs ("1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,  \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0" );
    }
  domain (min) {
    orders("1 3 1 1");
    coefs("-0.0143963, 0.027248, 1.41943, -0.549705, \
    1.85208, 1.83018, -5.58407, -2.96409, -0.000201525, \
    0.000114903, -0.00251275, -0.00190513, 0.0025968, \
    0.00126903, -0.0109683, -0.00618697, 0.0342387, \
    0.0150761, 2.08784, -0.221496, 4.13848, 2.44241, \
    -14.0275, -7.83306, 7.09012e-05, -1.98323e-05, \
    -0.00194544, 0.000979011, 0.00657121, -0.000407383, \
    -0.0275888, -0.0163063");
    }
  domain (max) {
    orders("1 3 1 1");
    coefs("-0.0143963, 0.027248, 1.41943, -0.549705, \
    1.85208, 1.83018, -5.58407, -2.96409, -0.000201525, \
    0.000114903, -0.00251275, -0.00190513, 0.0025968, \
    0.00126903, -0.0109683, -0.00618697, 0.0342387, \
    0.0150761, 2.08784, -0.221496, 4.13848, 2.44241, \
    -14.0275, -7.83306, 7.09012e-05, -1.98323e-05, \
    -0.00194544, 0.000979011, 0.00657121, -0.000407383, \
    -0.0275888, -0.0163063");
    }
  }
  noise_immunity_below_low (my_noise_reject_outside_rail) {
    orders("1 3 1 1");
    coefs("-0.0143963, 0.027248, 1.41943, -0.549705, \
    1.85208, 1.83018, -5.58407, -2.96409, -0.000201525, \
    0.000114903, -0.00251275, -0.00190513, 0.0025968, \
    0.00126903, -0.0109683, -0.00618697, 0.0342387, \
    0.0150761, 2.08784, -0.221496, 4.13848, 2.44241, \
    -14.0275, -7.83306, 7.09012e-05, -1.98323e-05, \
    -0.00194544, 0.000979011, 0.00657121, -0.000407383, \
    -0.0275888, -0.0163063");
    }
  noise_immunity_above_high (my_noise_reject_outside_rail) {
    orders("1 3 1 1");
    coefs("-0.0143963, 0.027248, 1.41943, -0.549705, \
    1.85208, 1.83018, -5.58407, -2.96409, -0.000201525, \
    0.000114903, -0.00251275, -0.00190513, 0.0025968, \
    0.00126903, -0.0109683, -0.00618697, 0.0342387, \
    0.0150761, 2.08784, -0.221496, 4.13848, 2.44241, \
    -14.0275, -7.83306, 7.09012e-05, -1.98323e-05, \
    -0.00194544, 0.000979011, 0.00657121, -0.000407383, \
    -0.0275888, -0.0163063");
    }

  steady_state_resistance_high : 1500;
  steady_state_resistance_low : 1100;
  steady_state_resistance_above_high : 200;
  steady_state_resistance_below_low : 100;

  steady_state_current_low(my_current_low) {
    orders("1 3 1 1");
    coefs("-0.0143963, 0.027248, 1.41943, -0.549705, \
    1.85208, 1.83018, -5.58407, -2.96409, -0.000201525, \
    0.000114903, -0.00251275, -0.00190513, 0.0025968, \
    0.00126903, -0.0109683, -0.00618697, 0.0342387, \
    0.0150761, 2.08784, -0.221496, 4.13848, 2.44241, \
    -14.0275, -7.83306, 7.09012e-05, -1.98323e-05, \
    -0.00194544, 0.000979011, 0.00657121, -0.000407383, \
    -0.0275888, -0.0163063");
  }

  steady_state_current_high(my_current_high) {
    orders("1 3 1 1");
    coefs("-0.0143963, 0.027248, 1.41943, -0.549705, \
    1.85208, 1.83018, -5.58407, -2.96409, -0.000201525, \
    0.000114903, -0.00251275, -0.00190513, 0.0025968, \
    0.00126903, -0.0109683, -0.00618697, 0.0342387, \
    0.0150761, 2.08784, -0.221496, 4.13848, 2.44241, \
    -14.0275, -7.83306, 7.09012e-05, -1.98323e-05, \
    -0.00194544, 0.000979011, 0.00657121, -0.000407383, \
    -0.0275888, -0.0163063");
  }

/*
  steady_state_current_tristate(my_current_high) {
    orders("1 3 1 1");
    coefs("-0.0143963, 0.027248, 1.41943, -0.549705, \
    1.85208, 1.83018, -5.58407, -2.96409, -0.000201525, \
    0.000114903, -0.00251275, -0.00190513, 0.0025968, \
    0.00126903, -0.0109683, -0.00618697, 0.0342387, \
    0.0150761, 2.08784, -0.221496, 4.13848, 2.44241, \
    -14.0275, -7.83306, 7.09012e-05, -1.98323e-05, \
    -0.00194544, 0.000979011, 0.00657121, -0.000407383, \
    -0.0275888, -0.0163063");
  }
*/

  propagated_noise_width_high(my_propagated_noise) {
 orders ("1, 1, 1, 1, 1, 1, 1")
 coefs ("1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0" );
  }

  propagated_noise_height_high(my_propagated_noise) {
 orders ("1, 1, 1, 1, 1, 1, 1")
 coefs ("1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0" );
  }

  propagated_noise_peak_time_ratio_high(my_propagated_noise) {
 orders ("1, 1, 1, 1, 1, 1, 1")
 coefs ("1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0" );
  }

  propagated_noise_width_low(my_propagated_noise) {
 orders ("1, 1, 1, 1, 1, 1, 1")
 coefs ("1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0" );
  }

  propagated_noise_height_low(my_propagated_noise) {
 orders ("1, 1, 1, 1, 1, 1, 1")
 coefs ("1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0" );
  }

  propagated_noise_peak_time_ratio_low(my_propagated_noise) {
 orders ("1, 1, 1, 1, 1, 1, 1")
 coefs ("1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0" );
  }

  propagated_noise_width_above_high(my_propagated_noise) {
 orders ("1, 1, 1, 1, 1, 1, 1")
 coefs ("1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0" );
  }

  propagated_noise_height_above_high(my_propagated_noise) {
 orders ("1, 1, 1, 1, 1, 1, 1")
 coefs ("1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0" );
  }

  propagated_noise_peak_time_ratio_above_high(my_propagated_noise) {
 orders ("1, 1, 1, 1, 1, 1, 1")
 coefs ("1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0" );
  }

  propagated_noise_width_below_low(my_propagated_noise) {
 orders ("1, 1, 1, 1, 1, 1, 1")
 coefs ("1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0" );
  }

  propagated_noise_height_below_low(my_propagated_noise) {
 orders ("1, 1, 1, 1, 1, 1, 1")
 coefs ("1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0" );
  }

  propagated_noise_peak_time_ratio_below_low(my_propagated_noise) {
 orders ("1, 1, 1, 1, 1, 1, 1")
 coefs ("1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, \
         1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0" );
  }

      }
    }
  }
}
