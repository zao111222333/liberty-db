/*
BSD 3-Clause License

Copyright 2020 Lawrence T. Clark, Vinay Vashishtha, or Arizona State
University

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
notice, this list of conditions and the following disclaimer in the
documentation and/or other materials provided with the distribution.

3. Neither the name of the copyright holder nor the names of its
contributors may be used to endorse or promote products derived from this
software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.
*/

library (asap7sc7p5t_SEQ_LVT_SS_nldm_201020) {
  /* Models written by Liberate 18.1.0.293 from Cadence Design Systems, Inc. on Wed Dec  2 01:28:51 MST 2020 */
  comment : "";
  date : "$Date: Wed Dec  2 00:16:48 2020 $";
  revision : "1.0";
  delay_model : table_lookup;
  capacitive_load_unit (1,ff);
  current_unit : "1mA";
  leakage_power_unit : "1pW";
  pulling_resistance_unit : "1kohm";
  time_unit : "1ps";
  voltage_unit : "1V";
  voltage_map (VDD, 0.63);
  voltage_map (VSS, 0);
  voltage_map (GND, 0);
  default_cell_leakage_power : 0;
  default_fanout_load : 1;
  default_max_transition : 320;
  default_output_pin_cap : 0;
  in_place_swap_mode : match_footprint;
  input_threshold_pct_fall : 50;
  input_threshold_pct_rise : 50;
  nom_process : 1;
  nom_temperature : 100;
  nom_voltage : 0.63;
  output_threshold_pct_fall : 50;
  output_threshold_pct_rise : 50;
  slew_derate_from_library : 1;
  slew_lower_threshold_pct_fall : 10;
  slew_lower_threshold_pct_rise : 10;
  slew_upper_threshold_pct_fall : 90;
  slew_upper_threshold_pct_rise : 90;
  operating_conditions (PVT_0P63V_100C) {
    process : 1;
    temperature : 100;
    voltage : 0.63;
  }
  default_operating_conditions : PVT_0P63V_100C;
  lu_table_template (constraint_template_7x7) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("5, 10, 20, 40, 80, 160, 320");
    index_2 ("5, 10, 20, 40, 80, 160, 320");
  }
  lu_table_template (delay_template_7x7) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("5, 10, 20, 40, 80, 160, 320");
    index_2 ("0.72, 1.44, 2.88, 5.76, 11.52, 23.04, 46.08");
  }
  lu_table_template (mpw_constraint_template_7x7) {
    variable_1 : constrained_pin_transition;
    index_1 ("5, 10, 20, 40, 80, 160, 320");
  }
  power_lut_template (passive_power_template_7x1) {
    variable_1 : input_transition_time;
    index_1 ("5, 10, 20, 40, 80, 160, 320");
  }
  power_lut_template (power_template_7x7) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("5, 10, 20, 40, 80, 160, 320");
    index_2 ("0.72, 1.44, 2.88, 5.76, 11.52, 23.04, 46.08");
  }
  lu_table_template (waveform_template_name) {
    variable_1 : input_net_transition;
    variable_2 : normalized_voltage;
    index_1 ("0, 1000, 2000, 3000, 4000, 5000, 6000");
    index_2 ("0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16");
  }
  input_voltage (default_VDD_VSS_input) {
    vil : 0;
    vih : 0.63;
    vimin : 0;
    vimax : 0.63;
  }
  output_voltage (default_VDD_VSS_output) {
    vol : 0;
    voh : 0.63;
    vomin : 0;
    vomax : 0.63;
  }
  normalized_driver_waveform (waveform_template_name) {
    driver_waveform_name : "PreDriver20.5:rise";
    index_1 ("5, 10, 20, 40, 80, 160, 320");
    index_2 ("0, 0.03, 0.1, 0.158744, 0.221271, 0.279374, 0.333513, 0.3841, 0.437223, 0.533203, 0.58153, 0.626864, 0.717883, 0.806555, 0.9, 0.958983, 1");
    values ( \
      "0, 0.375, 0.625, 0.84375, 1.09375, 1.34375, 1.59375, 1.84375, 2.125, 2.6875, 3, 3.3125, 4, 4.75, 5.625, 6.21875, 6.65625", \
      "0, 0.75, 1.25, 1.6875, 2.1875, 2.6875, 3.1875, 3.6875, 4.25, 5.375, 6, 6.625, 8, 9.5, 11.25, 12.4375, 13.3125", \
      "0, 1.5, 2.5, 3.375, 4.375, 5.375, 6.375, 7.375, 8.5, 10.75, 12, 13.25, 16, 19, 22.5, 24.875, 26.625", \
      "0, 3, 5, 6.75, 8.75, 10.75, 12.75, 14.75, 17, 21.5, 24, 26.5, 32, 38, 45, 49.75, 53.25", \
      "0, 6, 10, 13.5, 17.5, 21.5, 25.5, 29.5, 34, 43, 48, 53, 64, 76, 90, 99.5, 106.5", \
      "0, 12, 20, 27, 35, 43, 51, 59, 68, 86, 96, 106, 128, 152, 180, 199, 213", \
      "0, 24, 40, 54, 70, 86, 102, 118, 136, 172, 192, 212, 256, 304, 360, 398, 426" \
    );
  }
  normalized_driver_waveform (waveform_template_name) {
    driver_waveform_name : "PreDriver20.5:fall";
    index_1 ("5, 10, 20, 40, 80, 160, 320");
    index_2 ("0, 0.03, 0.1, 0.158744, 0.221271, 0.279374, 0.333513, 0.3841, 0.437223, 0.533203, 0.58153, 0.626864, 0.717883, 0.806555, 0.9, 0.958983, 1");
    values ( \
      "0, 0.375, 0.625, 0.84375, 1.09375, 1.34375, 1.59375, 1.84375, 2.125, 2.6875, 3, 3.3125, 4, 4.75, 5.625, 6.21875, 6.65625", \
      "0, 0.75, 1.25, 1.6875, 2.1875, 2.6875, 3.1875, 3.6875, 4.25, 5.375, 6, 6.625, 8, 9.5, 11.25, 12.4375, 13.3125", \
      "0, 1.5, 2.5, 3.375, 4.375, 5.375, 6.375, 7.375, 8.5, 10.75, 12, 13.25, 16, 19, 22.5, 24.875, 26.625", \
      "0, 3, 5, 6.75, 8.75, 10.75, 12.75, 14.75, 17, 21.5, 24, 26.5, 32, 38, 45, 49.75, 53.25", \
      "0, 6, 10, 13.5, 17.5, 21.5, 25.5, 29.5, 34, 43, 48, 53, 64, 76, 90, 99.5, 106.5", \
      "0, 12, 20, 27, 35, 43, 51, 59, 68, 86, 96, 106, 128, 152, 180, 199, 213", \
      "0, 24, 40, 54, 70, 86, 102, 118, 136, 172, 192, 212, 256, 304, 360, 398, 426" \
    );
  }
  normalized_driver_waveform (waveform_template_name) {
    index_1 ("5, 10, 20, 40, 80, 160, 320");
    index_2 ("0, 0.03, 0.1, 0.158744, 0.221271, 0.279374, 0.333513, 0.3841, 0.437223, 0.533203, 0.58153, 0.626864, 0.717883, 0.806555, 0.9, 0.958983, 1");
    values ( \
      "0, 0.375, 0.625, 0.84375, 1.09375, 1.34375, 1.59375, 1.84375, 2.125, 2.6875, 3, 3.3125, 4, 4.75, 5.625, 6.21875, 6.65625", \
      "0, 0.75, 1.25, 1.6875, 2.1875, 2.6875, 3.1875, 3.6875, 4.25, 5.375, 6, 6.625, 8, 9.5, 11.25, 12.4375, 13.3125", \
      "0, 1.5, 2.5, 3.375, 4.375, 5.375, 6.375, 7.375, 8.5, 10.75, 12, 13.25, 16, 19, 22.5, 24.875, 26.625", \
      "0, 3, 5, 6.75, 8.75, 10.75, 12.75, 14.75, 17, 21.5, 24, 26.5, 32, 38, 45, 49.75, 53.25", \
      "0, 6, 10, 13.5, 17.5, 21.5, 25.5, 29.5, 34, 43, 48, 53, 64, 76, 90, 99.5, 106.5", \
      "0, 12, 20, 27, 35, 43, 51, 59, 68, 86, 96, 106, 128, 152, 180, 199, 213", \
      "0, 24, 40, 54, 70, 86, 102, 118, 136, 172, 192, 212, 256, 304, 360, 398, 426" \
    );
  }
  cell (ICGx1_ASAP7_75t_L) {
    statetable ("CLK ENA SE", "IQ") {
      table : "L L L : - : L ,  L L H : - : H , L H L : - : H , L H H : - : H , H - - : - : N ";
    }
    area : 0.26244;
    clock_gating_integrated_cell : latch_posedge_precontrol;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 30068.3;
      when : "(CLK * ENA * SE * !GCLK)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(CLK * ENA * SE * !GCLK)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 32232.6;
      when : "(CLK * ENA * SE * GCLK)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(CLK * ENA * SE * GCLK)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 32640.6;
      when : "(CLK * ENA * !SE * !GCLK)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(CLK * ENA * !SE * !GCLK)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 34805.4;
      when : "(CLK * ENA * !SE * GCLK)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(CLK * ENA * !SE * GCLK)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 32520.3;
      when : "(CLK * !ENA * SE * !GCLK)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(CLK * !ENA * SE * !GCLK)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 34685.1;
      when : "(CLK * !ENA * SE * GCLK)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(CLK * !ENA * SE * GCLK)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 29339.3;
      when : "(CLK * !ENA * !SE * !GCLK)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(CLK * !ENA * !SE * !GCLK)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 37524.3;
      when : "(CLK * !ENA * !SE * GCLK)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(CLK * !ENA * !SE * GCLK)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 24162.5;
      when : "(!CLK * ENA * SE * !GCLK)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!CLK * ENA * SE * !GCLK)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 26736.7;
      when : "(!CLK * ENA * !SE * !GCLK)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!CLK * ENA * !SE * !GCLK)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 26616.4;
      when : "(!CLK * !ENA * SE * !GCLK)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!CLK * !ENA * SE * !GCLK)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 25034.9;
      when : "(!CLK * !ENA * !SE * !GCLK)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!CLK * !ENA * !SE * !GCLK)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 30530.5;
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : VSS;
    }
    pin (IQ) {
      direction : internal;
      internal_node : "IQ";
    }
    pin (GCLK) {
      clock_gate_out_pin : true;
      direction : output;
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      state_function : "CLK & IQ";
      max_capacitance : 46.08;
      output_voltage : default_VDD_VSS_output;
      timing () {
        related_pin : "CLK";
        sdf_cond : "(ENA) | (~ENA & SE)";
        timing_sense : positive_unate;
        timing_type : combinational_fall;
        when : "(ENA) + (!ENA * SE)";
        cell_fall (delay_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          index_2 ("0.72, 1.44, 2.88, 5.76, 11.52, 23.04, 46.08");
          values ( \
            "14.0718, 17.1237, 22.8319, 33.9997, 56.2299, 100.643, 189.447", \
            "15.4957, 18.5938, 24.2901, 35.4853, 57.7341, 102.145, 190.945", \
            "17.9959, 21.1033, 26.8498, 38.0255, 60.2695, 104.688, 193.495", \
            "21.3935, 24.6506, 30.5584, 41.8664, 64.1106, 108.52, 197.333", \
            "26.4521, 29.8909, 35.9083, 47.3248, 69.7841, 114.195, 202.961", \
            "34.2519, 37.9786, 44.3145, 55.9575, 78.4533, 123.151, 212.024", \
            "46.1013, 50.2436, 57.2928, 69.462, 92.6295, 137.693, 227.218" \
          );
        }
        fall_transition (delay_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          index_2 ("0.72, 1.44, 2.88, 5.76, 11.52, 23.04, 46.08");
          values ( \
            "9.44254, 15.0574, 26.4625, 49.562, 96.086, 189.35, 375.963", \
            "9.50572, 15.0863, 26.4782, 49.565, 96.0854, 189.349, 375.963", \
            "10.0393, 15.4839, 26.7182, 49.6432, 96.0932, 189.348, 375.962", \
            "10.8752, 16.2868, 27.3656, 50.0932, 96.3135, 189.365, 375.961", \
            "12.1588, 17.4109, 28.3427, 50.8442, 96.7949, 189.761, 376.064", \
            "14.3471, 19.4996, 30.1191, 52.3127, 98.6691, 190.349, 376.539", \
            "17.9547, 23.195, 33.5469, 55.8373, 100.79, 193.904, 378.255" \
          );
        }
      }
      timing () {
        related_pin : "CLK";
        sdf_cond : "(~ENA & ~SE)";
        timing_sense : positive_unate;
        timing_type : combinational_fall;
        when : "(!ENA * !SE)";
        cell_fall (delay_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          index_2 ("0.72, 1.44, 2.88, 5.76, 11.52, 23.04, 46.08");
          values ( \
            "14.2208, 17.3362, 23.1406, 34.3953, 56.6419, 101.041, 189.851", \
            "15.6328, 18.7323, 24.5446, 35.8133, 58.0654, 102.468, 191.28", \
            "18.1398, 21.2966, 27.1353, 38.4131, 60.6796, 105.096, 193.892", \
            "21.5778, 24.8598, 30.8301, 42.1608, 64.4339, 108.841, 197.645", \
            "26.7423, 30.2678, 36.3144, 47.7065, 70.0568, 114.473, 203.259", \
            "34.8013, 38.5968, 44.8083, 56.2066, 78.4851, 122.99, 211.856", \
            "47.2173, 51.2208, 57.5276, 68.73, 90.9361, 135.386, 224.213" \
          );
        }
        fall_transition (delay_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          index_2 ("0.72, 1.44, 2.88, 5.76, 11.52, 23.04, 46.08");
          values ( \
            "9.58471, 15.2544, 26.6749, 49.7081, 96.1338, 189.248, 375.744", \
            "9.6464, 15.2892, 26.6971, 49.7134, 96.1345, 189.236, 375.744", \
            "10.1911, 15.6743, 26.9163, 49.7746, 96.1352, 189.24, 375.744", \
            "11.1078, 16.5889, 27.5506, 50.1577, 96.286, 189.239, 375.745", \
            "12.5208, 17.675, 28.4416, 50.7354, 96.5804, 189.413, 375.791", \
            "14.9241, 19.7544, 29.9235, 51.7024, 97.2568, 189.582, 375.999", \
            "18.2179, 22.4272, 31.7275, 52.5868, 97.3665, 191.092, 376.005" \
          );
        }
      }
      timing () {
        related_pin : "CLK";
        timing_sense : positive_unate;
        cell_rise (delay_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          index_2 ("0.72, 1.44, 2.88, 5.76, 11.52, 23.04, 46.08");
          values ( \
            "14.5267, 18.4914, 25.9593, 40.6561, 69.8692, 128.254, 244.932", \
            "15.753, 19.6846, 27.183, 41.8869, 71.1318, 129.505, 246.199", \
            "17.4571, 21.4806, 29.0006, 43.7296, 72.9948, 131.38, 248.076", \
            "19.363, 23.4521, 31.1453, 46.0338, 75.2911, 133.699, 250.403", \
            "21.8809, 25.9901, 33.615, 48.5462, 78.0472, 136.474, 253.152", \
            "24.7625, 28.9752, 36.7937, 51.9118, 81.3633, 140.5, 257.044", \
            "26.9239, 31.4074, 39.69, 55.0447, 85.2663, 144.483, 261.561" \
          );
        }
        rise_transition (delay_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          index_2 ("0.72, 1.44, 2.88, 5.76, 11.52, 23.04, 46.08");
          values ( \
            "12.7442, 20.7918, 37.1027, 69.993, 136.006, 268.14, 532.525", \
            "12.8358, 20.848, 37.1365, 69.9939, 136.005, 268.107, 532.518", \
            "13.3825, 21.2769, 37.4136, 70.0982, 136.018, 268.162, 532.524", \
            "13.8849, 21.9686, 37.9227, 70.56, 136.296, 268.112, 532.528", \
            "14.8684, 22.6277, 38.6272, 71.4443, 136.736, 268.601, 532.614", \
            "16.7378, 24.2404, 40.0652, 72.2397, 138.711, 269.528, 533.271", \
            "20.0526, 27.5174, 42.9796, 75.1584, 140.115, 271.995, 534.411" \
          );
        }
        cell_fall (delay_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          index_2 ("0.72, 1.44, 2.88, 5.76, 11.52, 23.04, 46.08");
          values ( \
            "14.0718, 17.1237, 22.8319, 33.9997, 56.2299, 100.643, 189.447", \
            "15.4957, 18.5938, 24.2901, 35.4853, 57.7341, 102.145, 190.945", \
            "17.9959, 21.1033, 26.8498, 38.0255, 60.2695, 104.688, 193.495", \
            "21.3935, 24.6506, 30.5584, 41.8664, 64.1106, 108.52, 197.333", \
            "26.4521, 29.8909, 35.9083, 47.3248, 69.7841, 114.195, 202.961", \
            "34.2519, 37.9786, 44.3145, 55.9575, 78.4533, 123.151, 212.024", \
            "46.1013, 50.2436, 57.2928, 69.462, 92.6295, 137.693, 227.218" \
          );
        }
        fall_transition (delay_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          index_2 ("0.72, 1.44, 2.88, 5.76, 11.52, 23.04, 46.08");
          values ( \
            "9.44254, 15.0574, 26.4625, 49.562, 96.086, 189.35, 375.963", \
            "9.50572, 15.0863, 26.4782, 49.565, 96.0854, 189.349, 375.963", \
            "10.0393, 15.4839, 26.7182, 49.6432, 96.0932, 189.348, 375.962", \
            "10.8752, 16.2868, 27.3656, 50.0932, 96.3135, 189.365, 375.961", \
            "12.1588, 17.4109, 28.3427, 50.8442, 96.7949, 189.761, 376.064", \
            "14.3471, 19.4996, 30.1191, 52.3127, 98.6691, 190.349, 376.539", \
            "17.9547, 23.195, 33.5469, 55.8373, 100.79, 193.904, 378.255" \
          );
        }
      }
      internal_power () {
        related_pin : "CLK";
        when : "(ENA) + (!ENA * SE)";
        related_pg_pin : VDD;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (power_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          index_2 ("0.72, 1.44, 2.88, 5.76, 11.52, 23.04, 46.08");
          values ( \
            "0.460546, 0.462659, 0.463959, 0.464547, 0.464752, 0.464757, 0.464626", \
            "0.455218, 0.458048, 0.459743, 0.460744, 0.46072, 0.461217, 0.461176", \
            "0.460255, 0.462994, 0.465255, 0.466926, 0.466841, 0.46817, 0.468295", \
            "0.490972, 0.492046, 0.494606, 0.496447, 0.496509, 0.497907, 0.497992", \
            "0.568773, 0.569289, 0.57014, 0.571186, 0.572655, 0.574359, 0.574726", \
            "0.739913, 0.738896, 0.737814, 0.739177, 0.740414, 0.740893, 0.741976", \
            "1.09771, 1.09426, 1.08985, 1.08906, 1.08801, 1.0874, 1.0883" \
          );
        }
      }
      internal_power () {
        related_pin : "CLK";
        when : "(ENA) + (!ENA * SE)";
        related_pg_pin : VSS;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (power_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          index_2 ("0.72, 1.44, 2.88, 5.76, 11.52, 23.04, 46.08");
          values ( \
            "0.0375592, 0.0396767, 0.041106, 0.0417588, 0.0419591, 0.041906, 0.0417108", \
            "0.0323691, 0.0354654, 0.0369584, 0.0379977, 0.0391464, 0.0385323, 0.0382021", \
            "0.0383556, 0.0402326, 0.0418532, 0.0426578, 0.0439411, 0.0432384, 0.0429405", \
            "0.0687662, 0.0711187, 0.0726939, 0.0734702, 0.0752281, 0.0747164, 0.0745304", \
            "0.1454, 0.147187, 0.148454, 0.150469, 0.151053, 0.150206, 0.149765", \
            "0.316711, 0.315047, 0.316143, 0.318606, 0.323665, 0.317191, 0.317599", \
            "0.672834, 0.667736, 0.66533, 0.666033, 0.663685, 0.672659, 0.668155" \
          );
        }
      }
      internal_power () {
        related_pin : "CLK";
        when : "(!ENA * !SE)";
        related_pg_pin : VDD;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (power_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          index_2 ("0.72, 1.44, 2.88, 5.76, 11.52, 23.04, 46.08");
          values ( \
            "0.625043, 0.627334, 0.628589, 0.629177, 0.629311, 0.629339, 0.629183", \
            "0.619767, 0.621867, 0.62352, 0.62439, 0.624772, 0.624848, 0.624793", \
            "0.625255, 0.627596, 0.630329, 0.631819, 0.632232, 0.632996, 0.633131", \
            "0.659128, 0.661114, 0.662704, 0.664371, 0.664976, 0.666188, 0.665973", \
            "0.743474, 0.743334, 0.744805, 0.745828, 0.748006, 0.748674, 0.749253", \
            "0.914974, 0.911888, 0.912428, 0.911527, 0.911997, 0.913647, 0.914416", \
            "1.22204, 1.21757, 1.2153, 1.21236, 1.21116, 1.21168, 1.21109" \
          );
        }
      }
      internal_power () {
        related_pin : "CLK";
        when : "(!ENA * !SE)";
        related_pg_pin : VSS;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (power_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          index_2 ("0.72, 1.44, 2.88, 5.76, 11.52, 23.04, 46.08");
          values ( \
            "0.271907, 0.273991, 0.275327, 0.275952, 0.276098, 0.27603, 0.275783", \
            "0.264913, 0.26756, 0.269137, 0.269921, 0.270254, 0.270208, 0.270045", \
            "0.272594, 0.27389, 0.275432, 0.276671, 0.277258, 0.277271, 0.277077", \
            "0.305443, 0.306113, 0.30712, 0.308545, 0.309853, 0.309461, 0.309648", \
            "0.389309, 0.390135, 0.391657, 0.393292, 0.393004, 0.393329, 0.393358", \
            "0.558708, 0.557673, 0.555797, 0.560282, 0.561224, 0.559089, 0.559914", \
            "0.865949, 0.860969, 0.85947, 0.857108, 0.860787, 0.874687, 0.856786" \
          );
        }
      }
    }
    pin (CLK) {
      driver_waveform_fall : "PreDriver20.5:fall";
      driver_waveform_rise : "PreDriver20.5:rise";
      clock : true;
      clock_gate_clock_pin : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 320;
      capacitance : 2.13747;
      rise_capacitance : 2.06793;
      rise_capacitance_range (1.3935, 2.06793);
      fall_capacitance : 2.13747;
      fall_capacitance_range (1.41695, 2.13747);
      input_voltage : default_VDD_VSS_input;
      timing () {
        related_pin : "CLK";
        sdf_cond : "adacond0";
        timing_type : min_pulse_width;
        when : "(ENA) + (!ENA * SE)";
        rise_constraint (mpw_constraint_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "10.9863, 10.9863, 20.752, 40.2832, 80.5664, 161.133, 321.045" \
          );
        }
        fall_constraint (mpw_constraint_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "29.6083, 32.9661, 36.1061, 45.3186, 80.5664, 161.133, 321.045" \
          );
        }
      }
      timing () {
        related_pin : "CLK";
        sdf_cond : "adacond1";
        timing_type : min_pulse_width;
        when : "(!ENA * !SE)";
        fall_constraint (mpw_constraint_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "21.0571, 23.1934, 23.1934, 40.2832, 80.5664, 161.133, 321.045" \
          );
        }
      }
      internal_power () {
        when : "(ENA * !GCLK) + (!ENA * SE * !GCLK)";
        related_pg_pin : VDD;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "0.534706, 0.532339, 0.533626, 0.548396, 0.589555, 0.703136, 0.980895" \
          );
        }
      }
      internal_power () {
        when : "(ENA * !GCLK) + (!ENA * SE * !GCLK)";
        related_pg_pin : VSS;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "0.15991, 0.156303, 0.158863, 0.172637, 0.214911, 0.327067, 0.60546" \
          );
        }
      }
      internal_power () {
        when : "(!ENA * !SE * !GCLK)";
        related_pg_pin : VDD;
        rise_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "-0.0829107, -0.0854096, -0.0830224, -0.0729023, -0.0445233, 0.0198838, 0.156399" \
          );
        }
        fall_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "0.263005, 0.261516, 0.265666, 0.27914, 0.310978, 0.378066, 0.517624" \
          );
        }
      }
      internal_power () {
        when : "(!ENA * !SE * !GCLK)";
        related_pg_pin : VSS;
        rise_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "0.22893, 0.227535, 0.229169, 0.240086, 0.268271, 0.332749, 0.469586" \
          );
        }
        fall_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "-0.0479163, -0.0500891, -0.0460394, -0.0334183, -0.00200902, 0.0653633, 0.204502" \
          );
        }
      }
    }
    pin (ENA) {
      driver_waveform_fall : "PreDriver20.5:fall";
      driver_waveform_rise : "PreDriver20.5:rise";
      clock_gate_enable_pin : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 320;
      capacitance : 0.412581;
      rise_capacitance : 0.412358;
      rise_capacitance_range (0.315107, 0.412358);
      fall_capacitance : 0.412581;
      fall_capacitance_range (0.279761, 0.412581);
      input_voltage : default_VDD_VSS_input;
      timing () {
        related_pin : "CLK";
        sdf_cond : "~SE";
        timing_type : hold_rising;
        when : "!SE";
        rise_constraint (constraint_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          index_2 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "-12.4731, -14.0987, -17.228, -21.792, -24.5975, -32.3853, -35.5725", \
            "-13.3339, -14.9595, -18.0888, -19.8625, -25.4583, -33.2461, -36.4333", \
            "-14.9911, -16.6166, -19.7459, -25.5172, -31.113, -34.9032, -38.0904", \
            "-16.8994, -19.6737, -22.8029, -27.3047, -34.17, -37.9602, -39.9512", \
            "-19.1353, -20.7609, -23.8902, -29.6615, -35.2572, -43.045, -42.2347", \
            "-20.9506, -26.5736, -29.7029, -31.4767, -37.0725, -44.8602, -48.0474", \
            "-20.8231, -26.4461, -29.5754, -34.2285, -40.9424, -44.7327, -47.9199" \
          );
        }
        fall_constraint (constraint_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          index_2 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "-18.1949, -17.9644, -17.528, -19.5825, -17.1641, -17.9858, -19.6292", \
            "-19.3965, -19.166, -18.7296, -17.9549, -18.3657, -19.1874, -20.8308", \
            "-21.7437, -21.5132, -21.0768, -20.302, -20.7129, -21.5346, -23.178", \
            "-29.0625, -25.9832, -25.5468, -27.5391, -25.1829, -26.0046, -30.4687", \
            "-34.2565, -34.026, -33.5896, -32.8148, -33.2257, -34.0474, -35.6908", \
            "-46.7531, -46.5226, -42.0887, -41.3139, -41.7248, -42.5465, -44.1899", \
            "-61.3879, -61.1575, -60.7211, -58.8281, -56.3596, -61.1789, -62.8223" \
          );
        }
      }
      timing () {
        related_pin : "CLK";
        timing_type : hold_rising;
        rise_constraint (constraint_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          index_2 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "-12.4731, -14.0987, -17.228, -21.792, -24.5975, -32.3853, -35.5725", \
            "-13.3339, -14.9595, -18.0888, -19.8625, -25.4583, -33.2461, -36.4333", \
            "-14.9911, -16.6166, -19.7459, -25.5172, -31.113, -34.9032, -38.0904", \
            "-16.8994, -19.6737, -22.8029, -27.3047, -34.17, -37.9602, -39.9512", \
            "-19.1353, -20.7609, -23.8902, -29.6615, -35.2572, -43.045, -42.2347", \
            "-20.9506, -26.5736, -29.7029, -31.4767, -37.0725, -44.8602, -48.0474", \
            "-20.8231, -26.4461, -29.5754, -34.2285, -40.9424, -44.7327, -47.9199" \
          );
        }
        fall_constraint (constraint_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          index_2 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "-18.1949, -17.9644, -17.528, -19.5825, -17.1641, -17.9858, -19.6292", \
            "-19.3965, -19.166, -18.7296, -17.9549, -18.3657, -19.1874, -20.8308", \
            "-21.7437, -21.5132, -21.0768, -20.302, -20.7129, -21.5346, -23.178", \
            "-29.0625, -25.9832, -25.5468, -27.5391, -25.1829, -26.0046, -30.4687", \
            "-34.2565, -34.026, -33.5896, -32.8148, -33.2257, -34.0474, -35.6908", \
            "-46.7531, -46.5226, -42.0887, -41.3139, -41.7248, -42.5465, -44.1899", \
            "-61.3879, -61.1575, -60.7211, -58.8281, -56.3596, -61.1789, -62.8223" \
          );
        }
      }
      timing () {
        related_pin : "CLK";
        sdf_cond : "~SE";
        timing_type : setup_rising;
        when : "!SE";
        rise_constraint (constraint_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          index_2 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "40.6011, 41.1678, 42.3245, 45.9375, 53.9089, 69.7474, 95.3467", \
            "41.5923, 42.159, 43.3157, 49.7189, 54.9001, 70.7385, 96.3379", \
            "43.5065, 44.0733, 45.23, 51.6332, 56.8143, 72.6528, 98.2522", \
            "49.0625, 47.6293, 48.7859, 52.2271, 60.3703, 76.2088, 99.373", \
            "53.0842, 53.651, 54.8076, 57.2133, 66.392, 82.2305, 103.832", \
            "56.042, 56.6088, 57.7655, 60.1712, 69.3498, 85.1883, 106.79", \
            "58.6873, 59.254, 60.4107, 64.1459, 71.9951, 87.8336, 109.435" \
          );
        }
        fall_constraint (constraint_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          index_2 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "35.354, 34.881, 33.9906, 33.6011, 33.7756, 36.4612, 49.8273", \
            "36.6435, 36.1705, 35.2802, 37.7199, 35.0652, 37.7507, 47.1193", \
            "39.1675, 38.6945, 37.8042, 40.2439, 37.5892, 40.2747, 49.6433", \
            "45.144, 43.5223, 42.632, 42.3047, 42.417, 45.1025, 51.6504", \
            "52.7702, 52.2972, 51.4069, 49.8491, 51.1919, 53.8774, 59.2485", \
            "66.7969, 62.3264, 61.4361, 63.8758, 61.2211, 63.9066, 65.2802", \
            "84.7556, 84.2825, 83.3922, 78.9551, 79.1797, 81.8652, 83.2388" \
          );
        }
      }
      timing () {
        related_pin : "CLK";
        timing_type : setup_rising;
        rise_constraint (constraint_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          index_2 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "40.6011, 41.1678, 42.3245, 45.9375, 53.9089, 69.7474, 95.3467", \
            "41.5923, 42.159, 43.3157, 49.7189, 54.9001, 70.7385, 96.3379", \
            "43.5065, 44.0733, 45.23, 51.6332, 56.8143, 72.6528, 98.2522", \
            "49.0625, 47.6293, 48.7859, 52.2271, 60.3703, 76.2088, 99.373", \
            "53.0842, 53.651, 54.8076, 57.2133, 66.392, 82.2305, 103.832", \
            "56.042, 56.6088, 57.7655, 60.1712, 69.3498, 85.1883, 106.79", \
            "58.6873, 59.254, 60.4107, 64.1459, 71.9951, 87.8336, 109.435" \
          );
        }
        fall_constraint (constraint_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          index_2 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "35.354, 34.881, 33.9906, 33.6011, 33.7756, 36.4612, 49.8273", \
            "36.6435, 36.1705, 35.2802, 37.7199, 35.0652, 37.7507, 47.1193", \
            "39.1675, 38.6945, 37.8042, 40.2439, 37.5892, 40.2747, 49.6433", \
            "45.144, 43.5223, 42.632, 42.3047, 42.417, 45.1025, 51.6504", \
            "52.7702, 52.2972, 51.4069, 49.8491, 51.1919, 53.8774, 59.2485", \
            "66.7969, 62.3264, 61.4361, 63.8758, 61.2211, 63.9066, 65.2802", \
            "84.7556, 84.2825, 83.3922, 78.9551, 79.1797, 81.8652, 83.2388" \
          );
        }
      }
      internal_power () {
        when : "(CLK * SE) + (!CLK * SE * !GCLK)";
        related_pg_pin : VDD;
        rise_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "0.00810169, 0.00814788, 0.00814993, 0.00815521, 0.00818881, 0.00822664, 0.00828062" \
          );
        }
        fall_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "0.00858057, 0.00852918, 0.00849917, 0.00847642, 0.00843645, 0.00838503, 0.00827868" \
          );
        }
      }
      internal_power () {
        when : "(CLK * SE) + (!CLK * SE * !GCLK)";
        related_pg_pin : VSS;
        rise_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "0.050885, 0.0511093, 0.0512512, 0.0514455, 0.0514773, 0.051275, 0.0511688" \
          );
        }
        fall_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "-0.0306126, -0.030186, -0.0305653, -0.0307287, -0.0308581, -0.0306667, -0.0309038" \
          );
        }
      }
      internal_power () {
        when : "(CLK * !SE)";
        related_pg_pin : VDD;
        rise_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "0.0307042, 0.0295862, 0.0300129, 0.0335913, 0.0466722, 0.0801737, 0.154548" \
          );
        }
        fall_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "0.148657, 0.146565, 0.146331, 0.152056, 0.167598, 0.203812, 0.279443" \
          );
        }
      }
      internal_power () {
        when : "(CLK * !SE)";
        related_pg_pin : VSS;
        rise_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "0.12187, 0.120762, 0.121193, 0.124677, 0.137755, 0.171456, 0.245781" \
          );
        }
        fall_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "0.0571933, 0.0557081, 0.05524, 0.0608062, 0.0762096, 0.112252, 0.188149" \
          );
        }
      }
      internal_power () {
        when : "(!CLK * !SE * !GCLK)";
        related_pg_pin : VDD;
        rise_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "0.313133, 0.311761, 0.31078, 0.314159, 0.327241, 0.36126, 0.440411" \
          );
        }
        fall_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "0.367756, 0.365506, 0.365004, 0.370289, 0.387316, 0.42585, 0.508547" \
          );
        }
      }
      internal_power () {
        when : "(!CLK * !SE * !GCLK)";
        related_pg_pin : VSS;
        rise_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "0.337714, 0.336537, 0.335606, 0.338675, 0.352125, 0.386273, 0.465528" \
          );
        }
        fall_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "0.3436, 0.342095, 0.341318, 0.346668, 0.363621, 0.401966, 0.484762" \
          );
        }
      }
    }
    pin (SE) {
      driver_waveform_fall : "PreDriver20.5:fall";
      driver_waveform_rise : "PreDriver20.5:rise";
      clock_gate_test_pin : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 320;
      capacitance : 0.414674;
      rise_capacitance : 0.411955;
      rise_capacitance_range (0.335629, 0.411955);
      fall_capacitance : 0.414674;
      fall_capacitance_range (0.338958, 0.414674);
      input_voltage : default_VDD_VSS_input;
      timing () {
        related_pin : "CLK";
        sdf_cond : "~ENA";
        timing_type : hold_rising;
        when : "!ENA";
        rise_constraint (constraint_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          index_2 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "-10.773, -12.035, -18.4701, -21.792, -26.676, -33.4107, -33.9676", \
            "-11.6224, -16.8819, -19.3195, -23.8486, -27.5253, -34.26, -34.8169", \
            "-13.2681, -18.5277, -20.9652, -25.4944, -29.1711, -35.9058, -36.4627", \
            "-19.1968, -21.6075, -24.0451, -27.3047, -32.2509, -38.9856, -42.3437", \
            "-21.6609, -22.9229, -25.3605, -29.8897, -37.5639, -44.2986, -44.8555", \
            "-24.9022, -26.1643, -32.5994, -37.1285, -40.8052, -47.5399, -48.0968", \
            "-25.8319, -31.0915, -33.529, -40.9375, -45.7324, -52.4671, -53.024" \
          );
        }
        fall_constraint (constraint_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          index_2 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "-18.3585, -18.1022, -17.6167, -19.5825, -17.1794, -18.0318, -19.7366", \
            "-19.1861, -18.9298, -18.4443, -17.5808, -18.007, -18.8594, -20.5642", \
            "-20.8076, -20.5514, -20.0659, -19.2024, -19.6286, -20.481, -22.1858", \
            "-26.7651, -23.6601, -23.1745, -25.0781, -22.7373, -23.5897, -28.1152", \
            "-29.5957, -29.3395, -28.8539, -27.9905, -28.4167, -29.2691, -30.9739", \
            "-38.8026, -38.5463, -38.0608, -37.1973, -37.6235, -38.4759, -40.1807", \
            "-52.6062, -52.35, -51.8644, -49.8828, -47.4297, -48.2821, -49.9869" \
          );
        }
      }
      timing () {
        related_pin : "CLK";
        timing_type : hold_rising;
        rise_constraint (constraint_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          index_2 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "-10.773, -12.035, -18.4701, -21.792, -26.676, -33.4107, -33.9676", \
            "-11.6224, -16.8819, -19.3195, -23.8486, -27.5253, -34.26, -34.8169", \
            "-13.2681, -18.5277, -20.9652, -25.4944, -29.1711, -35.9058, -36.4627", \
            "-19.1968, -21.6075, -24.0451, -27.3047, -32.2509, -38.9856, -42.3437", \
            "-21.6609, -22.9229, -25.3605, -29.8897, -37.5639, -44.2986, -44.8555", \
            "-24.9022, -26.1643, -32.5994, -37.1285, -40.8052, -47.5399, -48.0968", \
            "-25.8319, -31.0915, -33.529, -40.9375, -45.7324, -52.4671, -53.024" \
          );
        }
        fall_constraint (constraint_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          index_2 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "-18.3585, -18.1022, -17.6167, -19.5825, -17.1794, -18.0318, -19.7366", \
            "-19.1861, -18.9298, -18.4443, -17.5808, -18.007, -18.8594, -20.5642", \
            "-20.8076, -20.5514, -20.0659, -19.2024, -19.6286, -20.481, -22.1858", \
            "-26.7651, -23.6601, -23.1745, -25.0781, -22.7373, -23.5897, -28.1152", \
            "-29.5957, -29.3395, -28.8539, -27.9905, -28.4167, -29.2691, -30.9739", \
            "-38.8026, -38.5463, -38.0608, -37.1973, -37.6235, -38.4759, -40.1807", \
            "-52.6062, -52.35, -51.8644, -49.8828, -47.4297, -48.2821, -49.9869" \
          );
        }
      }
      timing () {
        related_pin : "CLK";
        sdf_cond : "~ENA";
        timing_type : setup_rising;
        when : "!ENA";
        rise_constraint (constraint_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          index_2 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "39.8602, 41.1682, 43.7431, 45.9375, 54.0393, 70.0169, 95.407", \
            "41.3603, 42.6683, 45.2432, 50.2278, 55.5394, 71.517, 96.9071", \
            "44.2538, 45.5618, 48.1367, 53.1213, 58.4329, 74.4105, 99.8006", \
            "46.7651, 50.922, 49.4994, 55.9266, 63.7931, 79.7707, 102.258", \
            "54.6296, 51.9401, 54.515, 59.4996, 68.8088, 80.7888, 106.179", \
            "56.1666, 57.4746, 60.0495, 65.0341, 70.3457, 86.3233, 111.713", \
            "64.9034, 62.214, 64.7888, 71.7734, 79.0826, 91.0627, 116.453" \
          );
        }
        fall_constraint (constraint_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          index_2 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "39.5151, 35.0148, 34.0713, 33.6011, 34.1272, 37.5159, 48.2907", \
            "36.4369, 35.9341, 34.9906, 37.3497, 35.0465, 38.4352, 49.21", \
            "38.2391, 37.7363, 36.7928, 39.1519, 36.8487, 40.2374, 51.0123", \
            "42.8467, 41.1952, 40.2517, 39.8438, 40.3076, 43.6963, 51.6504", \
            "48.0334, 47.5306, 46.5871, 44.9487, 46.643, 50.0317, 52.8115", \
            "58.3748, 57.872, 56.9285, 55.2901, 56.9844, 56.3756, 59.1554", \
            "73.7375, 73.2347, 72.2912, 67.7734, 68.3496, 67.7408, 74.5181" \
          );
        }
      }
      timing () {
        related_pin : "CLK";
        timing_type : setup_rising;
        rise_constraint (constraint_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          index_2 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "39.8602, 41.1682, 43.7431, 45.9375, 54.0393, 70.0169, 95.407", \
            "41.3603, 42.6683, 45.2432, 50.2278, 55.5394, 71.517, 96.9071", \
            "44.2538, 45.5618, 48.1367, 53.1213, 58.4329, 74.4105, 99.8006", \
            "46.7651, 50.922, 49.4994, 55.9266, 63.7931, 79.7707, 102.258", \
            "54.6296, 51.9401, 54.515, 59.4996, 68.8088, 80.7888, 106.179", \
            "56.1666, 57.4746, 60.0495, 65.0341, 70.3457, 86.3233, 111.713", \
            "64.9034, 62.214, 64.7888, 71.7734, 79.0826, 91.0627, 116.453" \
          );
        }
        fall_constraint (constraint_template_7x7) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          index_2 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "39.5151, 35.0148, 34.0713, 33.6011, 34.1272, 37.5159, 48.2907", \
            "36.4369, 35.9341, 34.9906, 37.3497, 35.0465, 38.4352, 49.21", \
            "38.2391, 37.7363, 36.7928, 39.1519, 36.8487, 40.2374, 51.0123", \
            "42.8467, 41.1952, 40.2517, 39.8438, 40.3076, 43.6963, 51.6504", \
            "48.0334, 47.5306, 46.5871, 44.9487, 46.643, 50.0317, 52.8115", \
            "58.3748, 57.872, 56.9285, 55.2901, 56.9844, 56.3756, 59.1554", \
            "73.7375, 73.2347, 72.2912, 67.7734, 68.3496, 67.7408, 74.5181" \
          );
        }
      }
      internal_power () {
        when : "(CLK * ENA) + (!CLK * ENA * !GCLK)";
        related_pg_pin : VDD;
        rise_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "-0.00845708, -0.00882057, -0.00931684, -0.00935101, -0.0096385, -0.00940577, -0.0091272" \
          );
        }
        fall_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "0.0272488, 0.027392, 0.0271002, 0.0271236, 0.027268, 0.0271, 0.0270812" \
          );
        }
      }
      internal_power () {
        when : "(CLK * ENA) + (!CLK * ENA * !GCLK)";
        related_pg_pin : VSS;
        rise_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "0.0545878, 0.0539464, 0.0538561, 0.0530809, 0.0535583, 0.0529448, 0.0528108" \
          );
        }
        fall_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "-0.0354768, -0.0355948, -0.0353229, -0.0353766, -0.0356433, -0.0353771, -0.0354768" \
          );
        }
      }
      internal_power () {
        when : "(CLK * !ENA)";
        related_pg_pin : VDD;
        rise_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "0.029774, 0.0291138, 0.0301641, 0.0346956, 0.0490316, 0.0852124, 0.167037" \
          );
        }
        fall_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "0.165709, 0.163907, 0.163106, 0.166887, 0.181949, 0.219699, 0.304404" \
          );
        }
      }
      internal_power () {
        when : "(CLK * !ENA)";
        related_pg_pin : VSS;
        rise_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "0.144537, 0.14382, 0.144999, 0.149358, 0.163746, 0.199902, 0.281167" \
          );
        }
        fall_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "0.0508746, 0.04915, 0.0483723, 0.051993, 0.0670198, 0.104882, 0.189052" \
          );
        }
      }
      internal_power () {
        when : "(!CLK * !ENA * !GCLK)";
        related_pg_pin : VDD;
        rise_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "0.311681, 0.310874, 0.310903, 0.314761, 0.329204, 0.367461, 0.454439" \
          );
        }
        fall_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "0.3848, 0.382973, 0.381795, 0.385598, 0.401202, 0.441275, 0.531178" \
          );
        }
      }
      internal_power () {
        when : "(!CLK * !ENA * !GCLK)";
        related_pg_pin : VSS;
        rise_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "0.360193, 0.359485, 0.359102, 0.362956, 0.37755, 0.415865, 0.502628" \
          );
        }
        fall_power (passive_power_template_7x1) {
          index_1 ("5, 10, 20, 40, 80, 160, 320");
          values ( \
            "0.337367, 0.335497, 0.334415, 0.337938, 0.353928, 0.393711, 0.483696" \
          );
        }
      }
    }
  }
}
